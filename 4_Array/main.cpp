#include<stdio.h>

// c++ 의 컴파일 
// c++ 에서 사람이 작성한 소스코드를 컴퓨터가 읽을 수 있는 코드로 변환하여 실행할 수 있는 파일로 변환하는 과정

// 1. 전처리(Preprocessing) 단계 : #include 와 #define 과 같은 전처리가 매크로들을 처리하는 단계
// 2. 컴파일(Compile) 단계 : 각각의 소스 파일들을 어셈블리 명령어로 변환
// 3. 어셈블(Assemble) 단계 : 어셈블리 코드들을 실제 기계어로 이루어진 목적 코드 (Object file)로 변환하는 단계
// 4. 링킹(Linking) 단계 : 각각의 목적 코드들을 한데 모아서 하나의 실행 파일을 생성하는 단계





// 메모리 영역
// 1. Code 영역 : 실행할 코드가 저장되어 있는 영역(기계어로 존재)
// 2. Data 영역 : 전역변수, Static 변수들이 저장, 프로세스가 종료될 때 까지 메모리에 저장
// 3. Stack 영역 : 지역변수, 매개변수들이 저장, 함수가 호출되면 생성되고 함수가 종료되면 시스템에 반환
// 4. Heap 영역 : malloc 또는 new 함수에 의해서 동적으로 할당되는 영역, malloc() Ehsms new 연산자로 할당, free()또는 delete 연산자로 해제



int g_money = 0;//전역 변수

static int s_money = 0;

#include "money.h.h"
#include "calcFunc.h"
int main()
{
	int t_money = 0;
	addMoney(100);
	addMoney(100);
	addMoney(100);
	addMoney(100);
	addMoney(100);
	printf("main t_money=%d\n", t_money);
	printf("main g_money=%d\n", g_money);
	int num1 = 0;
	int num2 = 0;
	scanf_s("%d %d",&num1, &num2);
	
	printf("더하기=%d\n", AddNum(num1, num2));

	scanf_s("%d %d", &num1, &num2);

	printf("빼기=%d\n", MinusNum(num1, num2));
}
